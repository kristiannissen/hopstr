---
import Skeleton from "../../layouts/Skeleton.astro";
import HopCharacteristics from "../../components/HopCharacteristics.astro";
import RandomResponsiveImage from "../../components/RandomResponsiveImage.astro";
import LinkList from "../../components/LinkList.astro";

export async function getStaticPaths() {
  const response = await fetch("https://hopstr.vercel.app/api/hops");
  const hops = await response.json();

  return hops.hoplist.map((hop) => {
    return {
      params: { slug: hop.slug },
      props: { hop },
    };
  });
}

const { hop } = Astro.props;

const filtered = [
  "Country",
  "Style Guide",
  "Alpha Acid Composition",
  "Characteristics",
  "Purpose",
  "Total Oil Composition",
  "Substitutes",
  "Beta Acid Composition",
  "Co-Humulone Composition",
];
const ch = hop.characteristics?.filter((c) => filtered.includes(c.name)) || [];
---

<Skeleton title=`${hop.name} humle`>
  <div class="max-w-prose">
    <article class="mx-2">
      <header>
        <h1 class="font-sans text-4xl font-extrabold my-4">{hop.name}</h1>
      </header>
      <RandomResponsiveImage />
      <article class="mb-8">
        <h2 class="text-2xl font-sans font-semibold my-4">Beskrivelse</h2>
        <p>{hop.description ? hop.description : ""}</p>
      </article>
      <article class="mb-8 grid grid-cols-2 gap-2">
        {
          ch.map((c) => (
            <>
              <div>{c.name}</div>
              <div>{c.value}</div>
            </>
          ))
        }
	<aside>
		Here
		<link-list></link-list>
	</aside>
      </article>
    </article>
  </div>
</Skeleton>
